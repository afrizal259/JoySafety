<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jd.security.llmsec.data.mapper.FunctionConfMapper">
  <resultMap id="BaseResultMap" type="com.jd.security.llmsec.data.pojo.FunctionConf">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="group" jdbcType="VARCHAR" property="group" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="timeout_milliseconds" jdbcType="BIGINT" property="timeoutMilliseconds" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="editor_erp" jdbcType="VARCHAR" property="editorErp" />
    <result column="editor_name" jdbcType="VARCHAR" property="editorName" />
    <result column="auditor_erp" jdbcType="VARCHAR" property="auditorErp" />
    <result column="auditor_name" jdbcType="VARCHAR" property="auditorName" />
    <result column="release_erp" jdbcType="VARCHAR" property="releaseErp" />
    <result column="release_name" jdbcType="VARCHAR" property="releaseName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jd.security.llmsec.data.pojo.FunctionConf">
    <result column="conf" jdbcType="LONGVARCHAR" property="conf" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `name`, `group`, `desc`, `type`, `timeout_milliseconds`, `version`, `status`, 
    `editor_erp`, `editor_name`, `auditor_erp`, `auditor_name`, `release_erp`, `release_name`, 
    `create_time`, `update_time`
  </sql>
  <sql id="Blob_Column_List">
    `conf`
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.jd.security.llmsec.data.pojo.FunctionConfExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from function_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.jd.security.llmsec.data.pojo.FunctionConfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from function_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from function_conf
    where `id` = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from function_conf
    where `id` = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jd.security.llmsec.data.pojo.FunctionConfExample">
    delete from function_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jd.security.llmsec.data.pojo.FunctionConf">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into function_conf (`name`, `group`, `desc`, 
      `type`, `timeout_milliseconds`, `version`, 
      `status`, `editor_erp`, `editor_name`, 
      `auditor_erp`, `auditor_name`, `release_erp`, 
      `release_name`, `create_time`, `update_time`, 
      `conf`)
    values (#{name,jdbcType=VARCHAR}, #{group,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{timeoutMilliseconds,jdbcType=BIGINT}, #{version,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{editorErp,jdbcType=VARCHAR}, #{editorName,jdbcType=VARCHAR}, 
      #{auditorErp,jdbcType=VARCHAR}, #{auditorName,jdbcType=VARCHAR}, #{releaseErp,jdbcType=VARCHAR}, 
      #{releaseName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{conf,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jd.security.llmsec.data.pojo.FunctionConf">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into function_conf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="group != null">
        `group`,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="timeoutMilliseconds != null">
        `timeout_milliseconds`,
      </if>
      <if test="version != null">
        `version`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="editorErp != null">
        `editor_erp`,
      </if>
      <if test="editorName != null">
        `editor_name`,
      </if>
      <if test="auditorErp != null">
        `auditor_erp`,
      </if>
      <if test="auditorName != null">
        `auditor_name`,
      </if>
      <if test="releaseErp != null">
        `release_erp`,
      </if>
      <if test="releaseName != null">
        `release_name`,
      </if>
      <if test="createTime != null">
        `create_time`,
      </if>
      <if test="updateTime != null">
        `update_time`,
      </if>
      <if test="conf != null">
        `conf`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="group != null">
        #{group,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="timeoutMilliseconds != null">
        #{timeoutMilliseconds,jdbcType=BIGINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="editorErp != null">
        #{editorErp,jdbcType=VARCHAR},
      </if>
      <if test="editorName != null">
        #{editorName,jdbcType=VARCHAR},
      </if>
      <if test="auditorErp != null">
        #{auditorErp,jdbcType=VARCHAR},
      </if>
      <if test="auditorName != null">
        #{auditorName,jdbcType=VARCHAR},
      </if>
      <if test="releaseErp != null">
        #{releaseErp,jdbcType=VARCHAR},
      </if>
      <if test="releaseName != null">
        #{releaseName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="conf != null">
        #{conf,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jd.security.llmsec.data.pojo.FunctionConfExample" resultType="java.lang.Long">
    select count(*) from function_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update function_conf
    <set>
      <if test="row.id != null">
        `id` = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.name != null">
        `name` = #{row.name,jdbcType=VARCHAR},
      </if>
      <if test="row.group != null">
        `group` = #{row.group,jdbcType=VARCHAR},
      </if>
      <if test="row.desc != null">
        `desc` = #{row.desc,jdbcType=VARCHAR},
      </if>
      <if test="row.type != null">
        `type` = #{row.type,jdbcType=VARCHAR},
      </if>
      <if test="row.timeoutMilliseconds != null">
        `timeout_milliseconds` = #{row.timeoutMilliseconds,jdbcType=BIGINT},
      </if>
      <if test="row.version != null">
        `version` = #{row.version,jdbcType=INTEGER},
      </if>
      <if test="row.status != null">
        `status` = #{row.status,jdbcType=VARCHAR},
      </if>
      <if test="row.editorErp != null">
        `editor_erp` = #{row.editorErp,jdbcType=VARCHAR},
      </if>
      <if test="row.editorName != null">
        `editor_name` = #{row.editorName,jdbcType=VARCHAR},
      </if>
      <if test="row.auditorErp != null">
        `auditor_erp` = #{row.auditorErp,jdbcType=VARCHAR},
      </if>
      <if test="row.auditorName != null">
        `auditor_name` = #{row.auditorName,jdbcType=VARCHAR},
      </if>
      <if test="row.releaseErp != null">
        `release_erp` = #{row.releaseErp,jdbcType=VARCHAR},
      </if>
      <if test="row.releaseName != null">
        `release_name` = #{row.releaseName,jdbcType=VARCHAR},
      </if>
      <if test="row.createTime != null">
        `create_time` = #{row.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updateTime != null">
        `update_time` = #{row.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.conf != null">
        `conf` = #{row.conf,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update function_conf
    set `id` = #{row.id,jdbcType=BIGINT},
      `name` = #{row.name,jdbcType=VARCHAR},
      `group` = #{row.group,jdbcType=VARCHAR},
      `desc` = #{row.desc,jdbcType=VARCHAR},
      `type` = #{row.type,jdbcType=VARCHAR},
      `timeout_milliseconds` = #{row.timeoutMilliseconds,jdbcType=BIGINT},
      `version` = #{row.version,jdbcType=INTEGER},
      `status` = #{row.status,jdbcType=VARCHAR},
      `editor_erp` = #{row.editorErp,jdbcType=VARCHAR},
      `editor_name` = #{row.editorName,jdbcType=VARCHAR},
      `auditor_erp` = #{row.auditorErp,jdbcType=VARCHAR},
      `auditor_name` = #{row.auditorName,jdbcType=VARCHAR},
      `release_erp` = #{row.releaseErp,jdbcType=VARCHAR},
      `release_name` = #{row.releaseName,jdbcType=VARCHAR},
      `create_time` = #{row.createTime,jdbcType=TIMESTAMP},
      `update_time` = #{row.updateTime,jdbcType=TIMESTAMP},
      `conf` = #{row.conf,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update function_conf
    set `id` = #{row.id,jdbcType=BIGINT},
      `name` = #{row.name,jdbcType=VARCHAR},
      `group` = #{row.group,jdbcType=VARCHAR},
      `desc` = #{row.desc,jdbcType=VARCHAR},
      `type` = #{row.type,jdbcType=VARCHAR},
      `timeout_milliseconds` = #{row.timeoutMilliseconds,jdbcType=BIGINT},
      `version` = #{row.version,jdbcType=INTEGER},
      `status` = #{row.status,jdbcType=VARCHAR},
      `editor_erp` = #{row.editorErp,jdbcType=VARCHAR},
      `editor_name` = #{row.editorName,jdbcType=VARCHAR},
      `auditor_erp` = #{row.auditorErp,jdbcType=VARCHAR},
      `auditor_name` = #{row.auditorName,jdbcType=VARCHAR},
      `release_erp` = #{row.releaseErp,jdbcType=VARCHAR},
      `release_name` = #{row.releaseName,jdbcType=VARCHAR},
      `create_time` = #{row.createTime,jdbcType=TIMESTAMP},
      `update_time` = #{row.updateTime,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jd.security.llmsec.data.pojo.FunctionConf">
    update function_conf
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="group != null">
        `group` = #{group,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="timeoutMilliseconds != null">
        `timeout_milliseconds` = #{timeoutMilliseconds,jdbcType=BIGINT},
      </if>
      <if test="version != null">
        `version` = #{version,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="editorErp != null">
        `editor_erp` = #{editorErp,jdbcType=VARCHAR},
      </if>
      <if test="editorName != null">
        `editor_name` = #{editorName,jdbcType=VARCHAR},
      </if>
      <if test="auditorErp != null">
        `auditor_erp` = #{auditorErp,jdbcType=VARCHAR},
      </if>
      <if test="auditorName != null">
        `auditor_name` = #{auditorName,jdbcType=VARCHAR},
      </if>
      <if test="releaseErp != null">
        `release_erp` = #{releaseErp,jdbcType=VARCHAR},
      </if>
      <if test="releaseName != null">
        `release_name` = #{releaseName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        `create_time` = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        `update_time` = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="conf != null">
        `conf` = #{conf,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jd.security.llmsec.data.pojo.FunctionConf">
    update function_conf
    set `name` = #{name,jdbcType=VARCHAR},
      `group` = #{group,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      `timeout_milliseconds` = #{timeoutMilliseconds,jdbcType=BIGINT},
      `version` = #{version,jdbcType=INTEGER},
      `status` = #{status,jdbcType=VARCHAR},
      `editor_erp` = #{editorErp,jdbcType=VARCHAR},
      `editor_name` = #{editorName,jdbcType=VARCHAR},
      `auditor_erp` = #{auditorErp,jdbcType=VARCHAR},
      `auditor_name` = #{auditorName,jdbcType=VARCHAR},
      `release_erp` = #{releaseErp,jdbcType=VARCHAR},
      `release_name` = #{releaseName,jdbcType=VARCHAR},
      `create_time` = #{createTime,jdbcType=TIMESTAMP},
      `update_time` = #{updateTime,jdbcType=TIMESTAMP},
      `conf` = #{conf,jdbcType=LONGVARCHAR}
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jd.security.llmsec.data.pojo.FunctionConf">
    update function_conf
    set `name` = #{name,jdbcType=VARCHAR},
      `group` = #{group,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      `timeout_milliseconds` = #{timeoutMilliseconds,jdbcType=BIGINT},
      `version` = #{version,jdbcType=INTEGER},
      `status` = #{status,jdbcType=VARCHAR},
      `editor_erp` = #{editorErp,jdbcType=VARCHAR},
      `editor_name` = #{editorName,jdbcType=VARCHAR},
      `auditor_erp` = #{auditorErp,jdbcType=VARCHAR},
      `auditor_name` = #{auditorName,jdbcType=VARCHAR},
      `release_erp` = #{releaseErp,jdbcType=VARCHAR},
      `release_name` = #{releaseName,jdbcType=VARCHAR},
      `create_time` = #{createTime,jdbcType=TIMESTAMP},
      `update_time` = #{updateTime,jdbcType=TIMESTAMP}
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="com.jd.security.llmsec.data.pojo.FunctionConfExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from function_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.jd.security.llmsec.data.pojo.FunctionConfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from function_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>